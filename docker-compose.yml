version: "3"

networks:
  default:
    name: cicdlab
    
volumes:
  jenkins-data: {}
           
#  proxy:
#    image: nginx
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - 80:80
  
services:

  ciserver:
    depends_on:
      artifactsrepo:
        condition: service_healthy
      scmserver:
        condition: service_healthy
    container_name: cicdlab-ciserver
    hostname: ciserver
    build: 
      context: .
      dockerfile: jenkins.dockerfile
    environment:
      CASC_JENKINS_CONFIG: /setup/jenkins/jenkins-config.yaml
      JENKINS_JAVA_OPTS: -Djenkins.install.runSetupWizard=false
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
#      - jenkins-certs:/certs/client
      - jenkins-data:/var/jenkins_home
      - ./setup:/setup
#      - ./data/ciserver:/var/jenkins_home
      - //var/run/docker.sock:/var/run/docker.sock
    command: 
      - /bin/bash
      - -c
      - |
        echo "Setting up predefined users..."
        cp -rf /setup/jenkins/users /var/jenkins_home
        echo "Downloading/updating plugins..."
        jenkins-plugin-cli --plugin-file /setup/jenkins/jenkins-plugins.txt --verbose --skip-failed-plugins
        echo "Starting Jenkins..."
        /usr/local/bin/jenkins.sh
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 2gb

  dbserver:
    container_name: cicdlab-dbserver
    hostname: dbserver
    image: postgres
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
#      - postgres-data:/var/lib/postgresql/data
      - ./data/dbserver:/var/lib/postgresql/data
      - ./setup/postgres/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "postgresql://postgres:password@cicdlab-dbserver:5432/postgres", "-c", "select * from information_schema.schemata"]
      retries: 10
      start_period: 2m
    deploy:
      resources:
        limits:
          memory: 256m
  
  dbadmin:
    depends_on:
      dbserver:
        condition: service_healthy
    container_name: cicdlab-dbadmin
    hostname: dbadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cicdlabs.org
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_ENABlE_PSQL: 'True'
      PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS: 1000
      PGADMIN_CONFIG_CONFIG_DATABASE_URI: '''postgresql://postgres:password@cicdlab-dbserver:5432/postgres?options=-csearch_path=pgadmin'''
    ports:
      - 5050:80
    volumes:
      - ./setup:/setup
#      - pgadmin-data:/var/lib/pgadmin
      - ./data/dbadmin:/var/lib/pgadmin
      - ./data/dbadmin/sessions:/var/lib/pgadmin/sessions
      - ./data/dbadmin/storage:/var/lib/pgadmin/storage
      - ./data/dbadmin/azurecredentialcache:/var/lib/pgadmin/azurecredentialcache
    deploy:
      resources:
        limits:
          memory: 256m
      
  scmserver:
    depends_on:
      dbserver:
        condition: service_healthy
    container_name: cicdlab-scmserver
    hostname: scmserver
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=dbserver:5432
      - GITEA__database__NAME=public
      - GITEA__database__SCHEMA=gitea
      - GITEA__database__USER=postgres
      - GITEA__database__PASSWD=password
    volumes:
      - ./setup:/setup
#      - ./gitea-data:/data
      - ./data/scmserver:/data
      - ./setup/gitea/gitea-app.ini:/data/gitea/conf/app.ini
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      retries: 10
      start_period: 2m
    ports:
      - 3000:3000
      - 222:22
    deploy:
      resources:
        limits:
          memory: 256m
      
  artifactsrepo:
    container_name: cicdlab-artifactsrepo
    hostname: artifactsrepo
    image: sonatype/nexus3:latest
    environment:
      - NEXUS_SECURITY_INITIAL_PASSWORD=password
    volumes:
      - ./setup:/setup
      - ./data/artifactsrepo:/nexus-data
    healthcheck:
      test: ["CMD", "curl", "http://localhost:8081"]
      retries: 20
      interval: 1m
      start_period: 10m
    command: 
      - /bin/sh
      - -c
      - |
        echo "Restoring Nexus configuration..."
        mkdir -p /nexus-data/etc
        cp /setup/nexus/nexus.properties /nexus-data/etc
        echo "Starting Nexus..."
        /opt/sonatype/nexus/bin/nexus run
    ports:
      - 8081:8081
    deploy:
      resources:
        limits:
          memory: 4gb
    
  monitoringserver:
    container_name: cicdlab-monitoringserver
    hostname: monitoringserver
    image: prom/prometheus
    volumes:
      - ./setup:/setup
#      - prometheus.yml:/etc/prometheus/prom/prometheus.yml
#      - prometheus-data:/etc/prometheus/data
      - ./data/monitoringserver:/etc/prometheus/data
    ports:
      - 9090:9090
      
    