version: "3"

networks:
  default:
    name: cicdlab
    
volumes:
  artifacts-data: {}
  conainerregistry-data: {}
           
#  proxy:
#    image: nginx
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - 80:80
  
services:

  ciserver:
    container_name: cicdlab-ciserver
    hostname: ciserver
    build: 
      context: .
      dockerfile: jenkins.dockerfile
    environment:
      XXCASC_JENKINS_CONFIG: /var/jenkins_home/config.yaml
      JENKINS_JAVA_OPTS: -Djenkins.install.runSetupWizard=false -Dhudson.footerURL="Part of CI/CD Lab by Marco Scata"
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
#      - jenkins-certs:/certs/client
#      - jenkins-data:/var/jenkins_home
      - ./data/jenkins:/var/jenkins_home
      - //var/run/docker.sock:/var/run/docker.sock

  dbserver:
    container_name: cicdlab-dbserver
    hostname: dbserver
    image: postgres
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
#      - postgres-data:/var/lib/postgresql/data
      - ./data/postgres:/var/lib/postgresql/data
      - ./setup/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "psql", "-U", "postgres", "postgresql://postgres:password@cicdlab-dbserver:5432/postgres", "-c", "select * from information_schema.schemata"]
      retries: 10
      start_period: 10s
  
  dbadmin:
    depends_on:
      dbserver:
        condition: service_healthy
    container_name: cicdlab-dbadmin
    hostname: dbadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cicdlabs.org
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_CONFIG_ENABlE_PSQL: 'True'
      PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS: 1000
      PGADMIN_CONFIG_CONFIG_DATABASE_URI: '''postgresql://postgres:password@cicdlab-dbserver:5432/postgres?options=-csearch_path=pgadmin'''
    ports:
      - 5050:80
    volumes:
      - ./setup:/setup
#      - pgadmin-data:/var/lib/pgadmin
      - ./data/pgadmin:/var/lib/pgadmin
      - ./data/pgadmin/sessions:/var/lib/pgadmin/sessions
      - ./data/pgadmin/storage:/var/lib/pgadmin/storage
      - ./data/pgadmin/azurecredentialcache:/var/lib/pgadmin/azurecredentialcache
      
  scmserver:
    depends_on:
      dbserver:
        condition: service_healthy
    container_name: cicdlab-scmserver
    hostname: scmserver
    image: gitea/gitea:latest
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=dbserver:5432
      - GITEA__database__NAME=public
      - GITEA__database__SCHEMA=gitea
      - GITEA__database__USER=postgres
      - GITEA__database__PASSWD=password
    volumes:
      - ./setup:/setup
#      - ./gitea-data:/data
      - ./data/gitea:/data
      - ./setup/gitea-app.ini:/data/gitea/conf/app.ini
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      retries: 10
      start_period: 10s
    ports:
      - 3000:3000
      - 222:22
      
# docker run --name artifactory -v ./data/artifactory/var/:/var/opt/jfrog/artifactory -d -p 8081:8081 -p 8082:8082 releases-docker.jfrog.io/jfrog/artifactory-oss:latest

  artifactsrepo:
    container_name: cicdlab-artifactsrepo
    hostname: artifactsrepo
    image: sonatype/nexus3:latest
    environment:
      - NEXUS_SECURITY_INITIAL_PASSWORD=password
    volumes:
      - ./setup:/setup
      - ./data/nexus:/nexus-data
#      - ./setup/nexus.properties:/nexus-data/etc/nexus.properties
    command: 
      - /bin/sh
      - -c
      - |
        mkdir -p /nexus-data/etc
        cp /setup/nexus.properties /nexus-data/etc
        /opt/sonatype/nexus/bin/nexus run
    ports:
      - 8081:8081
    
  containerregistry:
    container_name: cicdlab-containerregistry
    hostname: containerregistry
    image: releases-docker.jfrog.io/jfrog/artifactory-jcr:latest
    volumes:
      - ./setup:/setup
      - conainerregistry-data:/var/opt/jfrog/artifactory
    ports:
      - 8083:8081
      - 8084:8082
    
  monitoringserver:
    container_name: cicdlab-monitoringserver
    hostname: monitoringserver
    image: prom/prometheus
    volumes:
      - ./setup:/setup
#      - prometheus.yml:/etc/prometheus/prom/prometheus.yml
#      - prometheus-data:/etc/prometheus/data
    ports:
      - 9090:9090
      
    