jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      entries:
      - group:
          name: "authenticated"
          permissions:
          - "Agent/Build"
          - "Agent/Connect"
          - "Credentials/Create"
          - "Credentials/Update"
          - "Credentials/View"
          - "Job/Build"
          - "Job/Cancel"
          - "Job/Configure"
          - "Job/Create"
          - "Job/Discover"
          - "Job/Read"
          - "Job/Workspace"
          - "Run/Update"
          - "View/Configure"
          - "View/Create"
          - "View/Delete"
          - "View/Read"
      - user:
          name: "admin"
          permissions:
          - "Agent/Build"
          - "Agent/Configure"
          - "Agent/Connect"
          - "Agent/Create"
          - "Agent/Delete"
          - "Agent/Disconnect"
          - "Agent/Provision"
          - "Credentials/Create"
          - "Credentials/Delete"
          - "Credentials/ManageDomains"
          - "Credentials/Update"
          - "Credentials/View"
          - "Job/Build"
          - "Job/Cancel"
          - "Job/Configure"
          - "Job/Create"
          - "Job/Delete"
          - "Job/Discover"
          - "Job/Move"
          - "Job/Read"
          - "Job/Workspace"
          - "Overall/Administer"
          - "Overall/Read"
          - "Run/Delete"
          - "Run/Replay"
          - "Run/Update"
          - "SCM/Tag"
          - "View/Configure"
          - "View/Create"
          - "View/Delete"
          - "View/Read"
      - user:
          name: "anonymous"
          permissions:
          - "Job/Read"
          - "Overall/Read"
          - "View/Read"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "jenkins.diagnostics.ControllerExecutorsNoAgents"
  - "hudson.util.DoubleLaunchChecker"
  labelAtoms:
  - name: "builder"
  - name: "built-in"
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  noUsageStatistics: true
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  nodes:
  - permanent:
      launcher:
        command:
          command: "docker run -i -e DOCKER_HOST='socat:2375' --rm --name cicdlab-builder\
            \ --network cicdlab -v //var/run/docker.sock:/var/run/docker.sock --init\
            \ mscata/cicdlab-ciagent java -jar /usr/share/jenkins/agent.jar"
      name: "builder"
      numExecutors: 5
      remoteFS: "/home/jenkins/agent"
      retentionStrategy: "always"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 3
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
  slaveAgentPort: 50000
  systemMessage: "Marco's virtual CI/CD Lab"
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  customHeader:
    enabled: true
    header: "logo"
    headerColor:
      backgroundColor: "black"
      color: "white"
      hoverColor: "grey"
    links:
    - external: true
      label: "on GitHub"
      logo: "nologo"
      url: "https://github.com/mscata/cicdlab"
    logo: "default"
    logoText: "Jenkins"
    thinHeader: false
    title: "Marco's virtual CI/CD Lab"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
  scriptApproval:
    approvedScriptHashes:
    - "SHA512:5e69a35b4e8f8787f617127bd1e5f3b45adc35eed1a010ba1a55a90e05db6e48877a255b58bc970dcce6adc78debe0e4dc6f3fa2741c229dd9b133dc2eca8f13"
unclassified:
  bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
    - simpleBuildDiscarder:
        discarder:
          logRotator:
            numToKeepStr: "10"
  buildStepOperation:
    enabled: false
  enrichedSummaryConfig:
    enrichedSummaryEnabled: false
    httpClientDelayBetweenRetriesInSeconds: 1
    httpClientMaxRetries: 3
    httpClientTimeoutInSeconds: 1
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "http://localhost:8080/github-webhook/"
  giteaServers:
    servers:
    - credentialsId: "GITEA_CREDENTIALS"
      displayName: "cicdlab-scmserver"
      manageHooks: true
      serverUrl: "http://scmserver:3000"
  globalTimeOutConfiguration:
    operations:
    - "abortOperation"
    overwriteable: false
  injectionConfig:
    allowUntrusted: false
    checkForBuildAgentErrors: false
    enabled: false
    enforceUrl: false
    gradleCaptureTaskInputFiles: true
    injectCcudExtension: false
    injectMavenExtension: false
    mavenCaptureGoalInputFiles: true
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://ciserver:8080/jenkins/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  mavenModuleSet:
    localRepository: "default"
  pollSCM:
    pollingThreadCount: 10
  sCMSkipBuildWrapper:
    skipPattern: ".*\\[ci skip\\].*"
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    globalConfigEmail: "jenkins@cicdlabs.org"
    globalConfigName: "ciserver"
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  shell:
    shell: "/bin/bash"
  sonarGlobalConfiguration:
    buildWrapperEnabled: true
    installations:
    - credentialsId: "SONAR_CREDENTIALS"
      name: "cicdlab-codescan"
      serverUrl: "http://codescan:9000/sonar"
      triggers:
        skipScmCause: false
        skipUpstreamCause: false
  subversionSCM:
    workspaceFormat: 8
  timestamper:
    allPipelines: true
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  warningsParsers:
    consoleLogScanningPermitted: false
tool:
  dependency-check:
    installations:
    - home: "/home/jenkins/tools/dependency-check"
      name: "Dependency Check"
  dockerTool:
    installations:
    - home: "/usr"
      name: "Docker"
  git:
    installations:
    - home: "/usr/bin/git"
      name: "Git"
  gradle:
    installations:
    - home: "/home/jenkins/tools/gradle-8.3"
      name: "Gradle"
  jdk:
    installations:
    - home: "/home/jenkins/tools/java/openjdk"
      name: "Open JDK 17"
  maven:
    installations:
    - home: "/home/jenkins/tools/apache-maven-3.9.4"
      name: "Maven"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  nodejs:
    installations:
    - home: "/home/jenkins/tools/nvm/versions/node/v20.12.1"
      name: "NodeJS"
